[pytest]
# Pytest configuration for AssistedDiscovery

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum Python version
minversion = 7.0

# Test paths
testpaths = tests

# Output options
addopts =
    --strict-markers
    --tb=short
    --disable-warnings
    -ra
    --color=yes

# Coverage options (when using --cov)
# These are applied when pytest-cov is used
[coverage:run]
source = app
omit =
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# Markers for categorizing tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    critical: marks tests as critical for CI/CD
    requires_llm: marks tests that require LLM access
    requires_db: marks tests that require database

# Asyncio configuration
asyncio_mode = auto

# Logging
log_cli = False
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (in seconds)
timeout = 300

# Parallel execution (requires pytest-xdist)
# Uncomment to enable: addopts = -n auto
